package o1.subprograms

import o1.*
import scala.math.*

// Here are some example functions whose implementations we examine
// in Chapter 1.7. See the chapter text for detailed explanations.

// DO NOT EDIT THIS FILE. There’s only example code here.
// The code that you’ll write for the programming assignments
// goes in the other files named after "week1" and "week2".


def average(first: Double, second: Double) = (first + second) / 2

def careerAdvicePlease(addendum: String) =
  println("Oppenheimer built the bomb, but now he's dead. (Dead!)")
  println("Einstein was very, very smart, but not enough not to be dead. (Dead!)")
  println("So don't go into science; you'll end up dead.")
  println("Don't go into science; you'll end up dead.")
  println(addendum)


def redBall(size: Int) = circle(size, Red)


def distance(x1: Double, y1: Double, x2: Double, y2: Double) = hypot(x2 - x1, y2 - y1)


def incomeTax(income: Double, thresholdIncome: Double, baseRate: Double, additionalRate: Double) =
  val baseTax = min(thresholdIncome, income)
  val additionalTax = max(income - thresholdIncome, 0)
  baseTax * baseRate + additionalTax * additionalRate


def experiment1(number: Int) =
  println("The number is: " + number)

def experiment2(numbers: Buffer[Int]) =
  numbers(0) = 100

def experiment3(number: Int) =
  println("The number is: " + number)
  number + 1

def experiment4(word: String) =
  var number = 1
  println(word + ": " + number)
  number = number + 1
  println(word + ": " + number)
  number = number + 1
  println(word + ": " + number)
  number

def experiment5(initial: Int) =
  var number = initial
  number = number + 1
  number = number + 1
  number = number + 1
  number


